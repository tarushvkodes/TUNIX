// TUNIX Plymouth Boot Animation
// Copyright Â© Tarushv Kosgi 2025

// Screen settings
Window.SetBackgroundTopColor(0.14, 0.14, 0.14);  // Dark gray
Window.SetBackgroundBottomColor(0.06, 0.06, 0.06);  // Darker gray

// Load logo image
logo.image = Image("tunixlogo.png");
logo.sprite = Sprite(logo.image);
logo.opacity_angle = 0;

// Screen dimensions
screen.width = Window.GetWidth();
screen.height = Window.GetHeight();

// Center the logo
logo.sprite.SetX(screen.width / 2 - logo.image.GetWidth() / 2);
logo.sprite.SetY(screen.height / 2 - logo.image.GetHeight() / 2);

// Progress bar properties
progress_box.image = Image("progress_box.png");
progress_box.sprite = Sprite(progress_box.image);
progress_box.sprite.SetX(screen.width / 2 - progress_box.image.GetWidth() / 2);
progress_box.sprite.SetY(screen.height * 0.75);

progress_bar.original_image = Image("progress_bar.png");
progress_bar.sprite = Sprite();
progress_bar.sprite.SetX(screen.width / 2 - progress_box.image.GetWidth() / 2);
progress_bar.sprite.SetY(screen.height * 0.75);

// Animation function
fun refresh_callback () {
    logo.opacity_angle += 2 * 3.14 / 50;
    if (logo.opacity_angle >= 2 * 3.14) {
        logo.opacity_angle -= 2 * 3.14;
    }
    
    logo.sprite.SetOpacity(0.7 + (0.3 * Math.Sin(logo.opacity_angle)));
}

Plymouth.SetRefreshFunction(refresh_callback);

// Progress bar update
fun progress_callback (duration, progress) {
    progress_bar.image = progress_bar.original_image.Scale(
        progress_bar.original_image.GetWidth() * progress,
        progress_bar.original_image.GetHeight()
    );
    progress_bar.sprite.SetImage(progress_bar.image);
}

Plymouth.SetBootProgressFunction(progress_callback);

// Message display
message_sprites = [];
message_sprite_count = 0;
message_sprite_y = 10;

fun display_message_callback(text) {
    // Clear previous messages
    if (message_sprite_count > 0) {
        for (i = 0; i < message_sprite_count; i++) {
            message_sprites[i].SetOpacity(0);
        }
        message_sprites = [];
        message_sprite_count = 0;
    }
    
    // Create message
    message_sprite = Sprite();
    message_sprite.SetPosition(10, message_sprite_y);
    message_sprite.SetText(text);
    message_sprites[message_sprite_count] = message_sprite;
    message_sprite_count++;
}

Plymouth.SetDisplayMessageFunction(display_message_callback);

// Dialog for password
dialog_sprite = Sprite();
dialog_sprite.SetImage(Image("dialog.png"));
dialog_sprite.SetOpacity(0);

bullet_image = Image("bullet.png");
bullets = [];
for (i = 0; i < 15; i++) {
    bullets[i] = Sprite(bullet_image);
    bullets[i].SetOpacity(0);
}

fun dialog_setup() {
    dialog_sprite.SetPosition(Window.GetWidth() / 2 - dialog_sprite.GetImage().GetWidth() / 2, Window.GetHeight() / 2 - dialog_sprite.GetImage().GetHeight() / 2);
    dialog_sprite.SetOpacity(1);
    
    for (i = 0; i < 15; i++) {
        bullets[i].SetPosition(dialog_sprite.GetX() + 20 + (i * 10), dialog_sprite.GetY() + 50);
        bullets[i].SetOpacity(0);
    }
}

fun display_password_callback(prompt, bullets_count) {
    dialog_setup();
    
    for (i = 0; i < 15; i++) {
        bullets[i].SetOpacity(0);
    }
    
    for (i = 0; i < bullets_count; i++) {
        bullets[i].SetOpacity(1);
    }
}

Plymouth.SetDisplayPasswordFunction(display_password_callback);

// Hide dialog when complete
fun display_normal_callback() {
    dialog_sprite.SetOpacity(0);
    for (i = 0; i < 15; i++) {
        bullets[i].SetOpacity(0);
    }
}

Plymouth.SetDisplayNormalFunction(display_normal_callback);